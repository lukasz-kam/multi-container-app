name: Build and deploy flask app to EC2
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'python-app/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-todo:latest ./python-app

    - name: Push Docker Image to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-todo:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Check out code from repository
        uses: actions/checkout@v3

      - name: Setup SSH Key for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          SERVER_IP=${{ secrets.SERVER_IP }}
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Deploy flask app and mongodb with ansible
        run: ansible-playbook ansible/main.yaml -i ${{ secrets.SERVER_IP }}, -u ec2-user -e "server_ip=${{ secrets.SERVER_IP }}" -e "ansible_ssh_private_key_file=~/.ssh/id_rsa"

      - name: Generate TLS certificate for mongodb
        run: ansible-playbook ansible/generate_cert.yaml -i ${{ secrets.SERVER_IP }}, -u ec2-user -e "server_ip=${{ secrets.SERVER_IP }}" -e "ansible_ssh_private_key_file=~/.ssh/id_rsa"
